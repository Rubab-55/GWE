// Load the full table of coordinates
var pixelLocations = ee.FeatureCollection('projects/gwe-condonhydrologylab/assets/pixel_locations');

// Function to process and save NDVI TIFF files for each chunk
var processChunk = function(startIndex, chunkSize) {
  // Convert the FeatureCollection to a list and slice the chunk
  var chunk = ee.FeatureCollection(pixelLocations.toList(chunkSize, startIndex));

  print('Processing chunk:', chunk);

  // Add the current chunk to the map for visualization
  Map.addLayer(chunk, {color: 'red'}, 'Chunk ' + startIndex);

  // Load Sentinel-2 imagery
  var sentinel2 = ee.ImageCollection('COPERNICUS/S2')
    .filterBounds(chunk.geometry()) // Ensure it filters using chunk geometry
    .filterDate('2021-06-01', '2021-08-31')
    .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 10))
    .select(['B8', 'B4']); // Select NIR (B8) and Red (B4) bands

  // Calculate NDVI
  var calculateNDVI = function(image) {
    return image.normalizedDifference(['B8', 'B4']).rename('NDVI');
  };

  var ndviCollection = sentinel2.map(calculateNDVI);
  var meanNDVI = ndviCollection.mean();

  // Clip the NDVI layer to the chunk's geometry for display and export
  var ndviClipped = meanNDVI.clip(chunk.geometry());

  // Add the NDVI layer for this chunk to the map
  var ndviVisParams = {min: 0, max: 1, palette: ['blue', 'white', 'green']};
  Map.addLayer(ndviClipped, ndviVisParams, 'NDVI Chunk ' + startIndex);

  // Export the NDVI as a GeoTIFF
  Export.image.toDrive({
    image: ndviClipped,
    description: 'NDVI_Chunk_' + startIndex,
    folder: 'GEE_NDVI_Exports', // Change to your desired folder name
    fileNamePrefix: 'NDVI_Chunk_' + startIndex,
    region: chunk.geometry().bounds(),
    scale: 30, // Use Sentinel-2 resolution
    crs: 'EPSG:4326', // Coordinate reference system
    maxPixels: 1e13 // Adjust if necessary
  });
};

// Chunk size and processing logic
var chunkSize = 5000;
var totalSize = pixelLocations.size().getInfo(); // Get the total size of the collection
var numChunks = Math.ceil(totalSize / chunkSize); // Calculate the number of chunks

print('Total Features:', totalSize);
print('Number of Chunks:', numChunks);

// Loop through each chunk and save the NDVI TIFF
for (var i = 0; i < numChunks; i++) {
  processChunk(i * chunkSize, chunkSize);
}
