// --- Step 1: Define regions for each criterion ---

// Define the HUC-2 region for Missouri (HUC-2 code 10)
var missouriHUC2 = ee.FeatureCollection("USGS/WBD/2017/HUC02")
  .filter(ee.Filter.eq('huc2', '10'));

// Simplify the geometry for Missouri HUC-2
var simplifiedMissouriHUC2 = missouriHUC2.geometry().simplify(1000);

// Load the HUC-6 regions within Missouri HUC-2
var huc6Regions = ee.FeatureCollection("USGS/WBD/2017/HUC06")
  .filterBounds(simplifiedMissouriHUC2);

// --- Change this HUC-6 Code to process a different HUC-6 ---
var huc6Code = '090100';  // Change this to the specific HUC-6 code you want to process

// Filter the specific HUC-6 region using the selected code
var selectedHUC6 = huc6Regions.filter(ee.Filter.eq('huc6', huc6Code)).first();
var huc6Geometry = selectedHUC6.geometry().simplify(1000);

// Define the date range for the dry season
var dryStartDate = '2021-06-01';
var dryEndDate = '2021-08-31';

// Define the date range for criteria 3 (Missouri) from July 1990 to July 2023
var criteria3StartDate = '1990-07-01';
var criteria3EndDate = '2023-07-31';

// --- NDVI Computation and Clustering Function ---

function processHUC6(huc6Geometry) {
  // --- NDVI from Sentinel-2 (Dry Season) ---
  var sentinel2Collection = ee.ImageCollection('COPERNICUS/S2_SR')
    .filterDate(dryStartDate, dryEndDate)
    .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 20))
    .select(['B8', 'B4'])
    .map(function(image) {
      return image.normalizedDifference(['B8', 'B4']).rename('NDVI');
    });

  var medianNDVI1 = sentinel2Collection.median().select('NDVI').clip(huc6Geometry);

  // --- NDVI Standard Deviation from Landsat (2021) ---
  var landsatCollection2 = ee.ImageCollection("LANDSAT/LC08/C02/T1_L2")
    .filterBounds(huc6Geometry)
    .filterDate('2021-01-01', '2021-12-31')
    .map(function(image) {
      var qaMask = image.select('QA_PIXEL').bitwiseAnd(31).eq(0);
      var ndvi = image.normalizedDifference(['SR_B5', 'SR_B4']).rename('NDVI');
      return image.addBands(ndvi).updateMask(qaMask);
    });

  var stdDevNDVI2 = landsatCollection2.select('NDVI').reduce(ee.Reducer.stdDev()).clip(huc6Geometry);

  // --- NDVI StdDev from 1990-2023 ---
  var landsatCollection3 = ee.ImageCollection("LANDSAT/LC08/C02/T1_L2")
    .filterBounds(huc6Geometry)
    .filterDate(criteria3StartDate, criteria3EndDate)
    .filter(ee.Filter.calendarRange(7, 7, 'month'))
    .map(function(image) {
      var qaMask = image.select('QA_PIXEL').bitwiseAnd(31).eq(0);
      var ndvi = image.normalizedDifference(['SR_B5', 'SR_B4']).rename('NDVI');
      return image.addBands(ndvi).updateMask(qaMask);
    });

  var stdDevNDVI3 = landsatCollection3.select('NDVI').reduce(ee.Reducer.stdDev()).clip(huc6Geometry);

  // --- Normalization Function ---
  function normalizeCluster(clusteredImage, region) {
    var minClusterValue = ee.Number(clusteredImage.reduceRegion({
      reducer: ee.Reducer.min(),
      geometry: region,
      scale: 30,
      bestEffort: true
    }).values().get(0));
    
    var maxClusterValue = ee.Number(clusteredImage.reduceRegion({
      reducer: ee.Reducer.max(),
      geometry: region,
      scale: 30,
      bestEffort: true
    }).values().get(0));

    return clusteredImage.unitScale(minClusterValue, maxClusterValue)
      .multiply(12).add(3)  // Scale to range [3, 15]
      .clamp(3, 15)         // Ensure values are strictly within [3, 15]
      .rename('normalizedCluster');
  }

  // --- Normalize the Clusters ---
  var normalizedClustered1 = normalizeCluster(medianNDVI1, huc6Geometry);
  var normalizedClustered2 = normalizeCluster(stdDevNDVI2, huc6Geometry);
  var normalizedClustered3 = normalizeCluster(stdDevNDVI3, huc6Geometry);

  var combinedClustered = normalizedClustered1.add(normalizedClustered2).add(normalizedClustered3).divide(3)
    .multiply(12).add(3)  // Ensure the final combined image has values between 3 and 15
    .clamp(3, 15);  // Strictly limit the range to 3-15

  // --- Mask out unwanted land cover classes using NLCD 2019 ---
  var nlcd = ee.Image('USGS/NLCD_RELEASES/2019_REL/NLCD/2019').select('landcover');
  var excludedClasses = [11, 21, 22, 23, 24, 81, 82];  // Water, urban, farmland, pasture
  var mask = nlcd.remap(excludedClasses, ee.List.repeat(0, excludedClasses.length), 1);
  var maskedCombinedClustered = combinedClustered.updateMask(mask);

  // --- Export the masked combined clustered image as a GeoTIFF ---
  Export.image.toDrive({
    image: maskedCombinedClustered,  // The image to export
    description: 'Masked_Combined_Clustered_NDVI_HUC6_' + huc6Code,  // Export task name
    folder: 'EarthEngineExports',  // Folder in Google Drive
    fileNamePrefix: 'Masked_Combined_Clustered_NDVI_HUC6_' + huc6Code,  // File name for export
    scale: 30,  // Spatial resolution of 30 meters
    region: huc6Geometry,  // The geometry of the current HUC-6 region
    maxPixels: 1e13,  // Maximum number of pixels
    crs: 'EPSG:4326',  // CRS (coordinate reference system)
    fileFormat: 'GeoTIFF'  // Export format
  });

  // --- Display the combined clustered NDVI on the map ---
  var combinedVisParams = {
    min: 3,
    max: 15,
    palette: ['FF0000', 'FFA500', 'FFFF00', '00FF00', '008000']
  };

  // Add the masked combined clustered image to the map
  Map.addLayer(maskedCombinedClustered, combinedVisParams, 'Clustered NDVI ' + huc6Code);
}

// --- Process the Selected HUC-6 ---
processHUC6(huc6Geometry);

// Center the map on the entire Missouri HUC-2 region
Map.centerObject(simplifiedMissouriHUC2, 6);
