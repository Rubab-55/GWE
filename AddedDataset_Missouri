// --- Step 1: Define regions for each criterion ---

// Define the HUC-2 region for Missouri (HUC-2 code 10)
var missouriHUC2 = ee.FeatureCollection("USGS/WBD/2017/HUC02")
  .filter(ee.Filter.eq('huc2', '10'));

// Simplify the geometry for Missouri
var simplifiedMissouriHUC2 = missouriHUC2.geometry().simplify(500);

// Define the date range for criteria 1 (Missouri) dry season
var dryStartDate = '2021-06-01';
var dryEndDate = '2021-08-31';

// Define the date range for criteria 3 (Missouri) from July 1990 to July 2023
var criteria3StartDate = '1990-07-01';
var criteria3EndDate = '2023-07-31';

// --- Step 2: Clustered NDVI for Criteria 1 (Dry Season NDVI) ---

// Function to compute NDVI for Sentinel-2
function computeNDVISentinel(image) {
  var ndvi = image.normalizedDifference(['B8', 'B4']).rename('NDVI');
  return ndvi;
}

// Load Sentinel-2 data for criteria 1 and compute median NDVI
var sentinel2Collection = ee.ImageCollection('COPERNICUS/S2_SR')
  .filterDate(dryStartDate, dryEndDate)
  .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 20))
  .select(['B8', 'B4'])  // Select only the necessary bands for NDVI
  .map(computeNDVISentinel);

var medianNDVI1 = sentinel2Collection.median().select('NDVI').clip(simplifiedMissouriHUC2);

// Sample points and apply k-means clustering for criteria 1
var training1 = medianNDVI1.sample({
  region: simplifiedMissouriHUC2,
  scale: 100,
  numPixels: 1000,
  geometries: true
});
var clusterer1 = ee.Clusterer.wekaKMeans(5).train(training1);
var clustered1 = medianNDVI1.cluster(clusterer1);

// --- Step 3: Clustered NDVI for Criteria 2 (Full Year NDVI Standard Deviation) ---

// Function to mask clouds and compute NDVI for Landsat
function maskLandsat(image) {
  var qaMask = image.select('QA_PIXEL').bitwiseAnd(31).eq(0);
  var opticalBands = image.select(['SR_B5', 'SR_B4']);  // Select relevant bands
  var ndvi = opticalBands.normalizedDifference(['SR_B5', 'SR_B4']).rename('NDVI');
  return image.addBands(ndvi).updateMask(qaMask);
}

// Load Landsat 8 data for criteria 2 and compute standard deviation NDVI
var landsatCollection2 = ee.ImageCollection("LANDSAT/LC08/C02/T1_L2")
  .filterBounds(simplifiedMissouriHUC2)
  .filterDate('2021-01-01', '2021-12-31')
  .select(['SR_B5', 'SR_B4', 'QA_PIXEL'])  // Select only necessary bands
  .map(maskLandsat);

// Compute the standard deviation of NDVI for the year 2021
var stdDevNDVI2 = landsatCollection2.select('NDVI').reduce(ee.Reducer.stdDev()).clip(simplifiedMissouriHUC2);

// Sample points and apply k-means clustering for criteria 2
var training2 = stdDevNDVI2.sample({
  region: simplifiedMissouriHUC2,
  scale: 30,
  numPixels: 500,
  geometries: true
});
var clusterer2 = ee.Clusterer.wekaKMeans(5).train(training2);
var clustered2 = stdDevNDVI2.cluster(clusterer2);

// --- Step 4: Clustered NDVI for Criteria 3 (NDVI Std Dev from 1990-2023) ---

// Load Landsat 8 data for criteria 3 and compute standard deviation of NDVI
var landsatCollection3 = ee.ImageCollection("LANDSAT/LC08/C02/T1_L2")
  .filterBounds(simplifiedMissouriHUC2)
  .filterDate(criteria3StartDate, criteria3EndDate)
  .filter(ee.Filter.calendarRange(7, 7, 'month'))
  .select(['SR_B5', 'SR_B4', 'QA_PIXEL'])  // Select only necessary bands
  .map(maskLandsat);

var stdDevNDVI3 = landsatCollection3.select('NDVI').reduce(ee.Reducer.stdDev()).clip(simplifiedMissouriHUC2);

// Sample points and apply k-means clustering for criteria 3
var training3 = stdDevNDVI3.sample({
  region: simplifiedMissouriHUC2,
  scale: 30,
  numPixels: 1000,
  geometries: true
});
var clusterer3 = ee.Clusterer.wekaKMeans(5).train(training3);
var clustered3 = stdDevNDVI3.cluster(clusterer3);

// --- Step 5: Combine Clustered Images and Normalize to Range 3-15 ---

// Define function to normalize clustered images to the range of 3-15
function normalizeCluster(clusteredImage) {
  var minClusterValue = ee.Number(clusteredImage.reduceRegion({
    reducer: ee.Reducer.min(),
    geometry: simplifiedMissouriHUC2,
    scale: 30,
    bestEffort: true
  }).values().get(0));
  
  var maxClusterValue = ee.Number(clusteredImage.reduceRegion({
    reducer: ee.Reducer.max(),
    geometry: simplifiedMissouriHUC2,
    scale: 30,
    bestEffort: true
  }).values().get(0));

  return clusteredImage.unitScale(minClusterValue, maxClusterValue)
    .multiply(12).add(3) // Scale to range [3, 15]
    .rename('normalizedCluster'); // Ensure that the combined image has a valid band name
}

// Normalize all clustered images
var normalizedClustered1 = normalizeCluster(clustered1);
var normalizedClustered2 = normalizeCluster(clustered2);
var normalizedClustered3 = normalizeCluster(clustered3);

// Combine the three normalized clustered images into one and give it a valid band name
var combinedClustered = normalizedClustered1.add(normalizedClustered2).add(normalizedClustered3).divide(3)
  .rename('combinedClustered'); // Renaming the combined image to ensure it has a proper band name

// --- Step 6: Mask out unwanted land cover classes using NLCD 2019 ---

// Load the NLCD 2019 dataset
var nlcd = ee.Image('USGS/NLCD_RELEASES/2019_REL/NLCD/2019')
  .select('landcover');

// Define land cover classes to exclude (urban, water, pasture, farmland)
var excludedClasses = [11, 21, 22, 23, 24, 81, 82];

// Create a mask for areas not in the excluded classes
var mask = nlcd.remap(excludedClasses, ee.List.repeat(0, excludedClasses.length), 1);

// Apply the mask to the combined clustered image
var maskedCombinedClustered = combinedClustered.updateMask(mask);

// --- Step 7: Display and Export the Combined Layer ---

// Visualization parameters for combined clusters
var combinedVisParams = {
  min: 3,
  max: 15,
  palette: ['FF0000', 'FFA500', 'FFFF00', '00FF00', '008000']
};

// Add the masked combined clustered image to the map
Map.addLayer(maskedCombinedClustered, combinedVisParams, 'Masked Combined Clustered NDVI');

// Export the masked combined clustered image
Export.image.toDrive({
  image: maskedCombinedClustered,  // The masked image
  description: 'Masked_Combined_Clustered_NDVI',
  folder: 'EarthEngineExports',
  fileNamePrefix: 'Masked_Combined_Clustered_NDVI',
  scale: 30,
  region: simplifiedMissouriHUC2,
  maxPixels: 1e13,
  crs: 'EPSG:4326',
  fileFormat: 'GeoTIFF'
});
