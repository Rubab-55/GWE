// Define the geometries for all regions
var eastCoast = ee.Geometry.Rectangle([-82, 25, -66, 45]);
var centralUS = ee.Geometry.Rectangle([-103, 36, -89, 49]);
var texas = ee.Geometry.Rectangle([-106, 25, -93, 37]);
var midwest = ee.Geometry.Rectangle([-104, 36, -80, 49]);
var southwestUS = ee.Geometry.Rectangle([-125, 31, -102, 37]);
var pacificNorthwest = ee.Geometry.Rectangle([-125, 42, -116, 49]);
var california = ee.Geometry.Rectangle([-125, 32, -114, 42]);
var montana = ee.Geometry.Rectangle([-116, 44, -104, 49]);
var wyoming = ee.Geometry.Rectangle([-111, 40, -104, 45]);
var florida = ee.Geometry.Rectangle([-87, 24, -79, 31]);
var alabama = ee.Geometry.Rectangle([-88, 30, -85, 35]);
var louisiana = ee.Geometry.Rectangle([-94, 29, -89, 33]);
var mississippi = ee.Geometry.Rectangle([-91, 30, -88, 35]);

// Define the date ranges for the dry seasons
var dryStartDateEastCoast = '2021-07-01';
var dryEndDateEastCoast = '2021-09-30';
var dryStartDateCentralTexasMidwestMontanaWyoming = '2021-06-01';
var dryEndDateCentralTexasMidwestMontanaWyoming = '2021-08-31';
var dryStartDateSouthwestPacificCalifornia = '2021-03-01';
var dryEndDateSouthwestPacificCalifornia = '2021-05-31';

// Cloud masking and scaling function
function maskL8sr(image) {
  var qaMask = image.select('QA_PIXEL').bitwiseAnd(parseInt('11111', 2)).eq(0);
  var saturationMask = image.select('QA_RADSAT').eq(0);

  var opticalBands = image.select('SR_B.').multiply(0.0000275).add(-0.2);
  var thermalBands = image.select('ST_B.*').multiply(0.00341802).add(149.0);

  return image.updateMask(qaMask).updateMask(saturationMask)
      .addBands(opticalBands, null, true)
      .addBands(thermalBands, null, true);
}

// Function to compute NDVI
function computeNDVI(image) {
  var ndvi = image.normalizedDifference(['SR_B5', 'SR_B4']).rename('NDVI');
  return ndvi;
}

// Function to process and rank NDVI for a given region
function processRegion(region, startDate, endDate, regionName) {
  var landsatCollection = ee.ImageCollection('LANDSAT/LC08/C02/T1_L2')
    .filterDate(startDate, endDate)
    .filter(ee.Filter.lt('CLOUD_COVER', 5))
    .map(maskL8sr)
    .map(computeNDVI);

  var medianNDVI = landsatCollection.median().select('NDVI');

  var huc6 = ee.FeatureCollection("USGS/WBD/2017/HUC06").filterBounds(region);
  var simplifiedHUC6 = huc6.map(function(feature) {
    return feature.simplify(1000);
  });

  var clippedNDVI = medianNDVI.clipToCollection(simplifiedHUC6);

  var training = clippedNDVI.sample({
    region: simplifiedHUC6.geometry(),
    scale: 30,
    numPixels: 500,
    geometries: true
  });

  var clusterer = ee.Clusterer.wekaKMeans(5).train(training);
  var clustered = clippedNDVI.cluster(clusterer);

  var clusterMeans = ee.List.sequence(0, 4).map(function(clusterIndex) {
    var meanNDVI = clippedNDVI.updateMask(clustered.eq(ee.Image.constant(clusterIndex))).reduceRegion({
      reducer: ee.Reducer.mean(),
      geometry: simplifiedHUC6.geometry(),
      scale: 30,
      bestEffort: true
    }).get('NDVI');
    return ee.Feature(null, {clusterIndex: clusterIndex, meanNDVI: meanNDVI});
  });

  var clusterMeanFeatures = ee.FeatureCollection(clusterMeans);
  var sortedClusterMeans = clusterMeanFeatures.sort('meanNDVI');
  var sortedClusterIndices = sortedClusterMeans.aggregate_array('clusterIndex');
  var clusterRanks = ee.List.sequence(1, 5);
  var rankedClusters = clustered.remap(sortedClusterIndices, clusterRanks);

  var clusterVisParams = {
    min: 1,
    max: 5,
    palette: ['red', 'orange', 'yellow', 'green', 'darkgreen']
  };

  Map.addLayer(rankedClusters.visualize(clusterVisParams), {}, 'Ranked Clustered NDVI ' + regionName);

  return rankedClusters;
}

// Process the East Coast region
var rankedClustersEastCoast = processRegion(eastCoast, dryStartDateEastCoast, dryEndDateEastCoast, 'East Coast');

// Process the Central US region
var rankedClustersCentralUS = processRegion(centralUS, dryStartDateCentralTexasMidwestMontanaWyoming, dryEndDateCentralTexasMidwestMontanaWyoming, 'Central US');

// Process the Texas region
var rankedClustersTexas = processRegion(texas, dryStartDateCentralTexasMidwestMontanaWyoming, dryEndDateCentralTexasMidwestMontanaWyoming, 'Texas');

// Process the Midwest region
var rankedClustersMidwest = processRegion(midwest, dryStartDateCentralTexasMidwestMontanaWyoming, dryEndDateCentralTexasMidwestMontanaWyoming, 'Midwest');

// Process the Southwest region
var rankedClustersSouthwestUS = processRegion(southwestUS, dryStartDateSouthwestPacificCalifornia, dryEndDateSouthwestPacificCalifornia, 'Southwest US');

// Process the Pacific Northwest region
var rankedClustersPacificNorthwest = processRegion(pacificNorthwest, dryStartDateSouthwestPacificCalifornia, dryEndDateSouthwestPacificCalifornia, 'Pacific Northwest');

// Process the California region
var rankedClustersCalifornia = processRegion(california, dryStartDateSouthwestPacificCalifornia, dryEndDateSouthwestPacificCalifornia, 'California');

// Process the Montana region
var rankedClustersMontana = processRegion(montana, dryStartDateCentralTexasMidwestMontanaWyoming, dryEndDateCentralTexasMidwestMontanaWyoming, 'Montana');

// Process the Wyoming region
var rankedClustersWyoming = processRegion(wyoming, dryStartDateCentralTexasMidwestMontanaWyoming, dryEndDateCentralTexasMidwestMontanaWyoming, 'Wyoming');

// Process the Florida region
var rankedClustersFlorida = processRegion(florida, dryStartDateCentralTexasMidwestMontanaWyoming, dryEndDateCentralTexasMidwestMontanaWyoming, 'Florida');

// Process the Alabama region
var rankedClustersAlabama = processRegion(alabama, dryStartDateCentralTexasMidwestMontanaWyoming, dryEndDateCentralTexasMidwestMontanaWyoming, 'Alabama');

// Process the Louisiana region
var rankedClustersLouisiana = processRegion(louisiana, dryStartDateCentralTexasMidwestMontanaWyoming, dryEndDateCentralTexasMidwestMontanaWyoming, 'Louisiana');

// Process the Mississippi region
var rankedClustersMississippi = processRegion(mississippi, dryStartDateCentralTexasMidwestMontanaWyoming, dryEndDateCentralTexasMidwestMontanaWyoming, 'Mississippi');

// Center the map on the regions to ensure proper display
Map.centerObject(eastCoast.union(centralUS).union(texas).union(midwest).union(southwestUS).union(pacificNorthwest).union(california).union(montana).union(wyoming).union(florida).union(alabama).union(louisiana).union(mississippi), 5);

// Create a legend for the ranked clustered NDVI
var legend = ui.Panel({style: {position: 'bottom-right', padding: '8px 15px'}});
var legendTitle = ui.Label({value: 'Ranked NDVI Clusters', style: {fontWeight: 'bold', fontSize: '12px'}});

var makeRow = function(color, name) {
  var colorBox = ui.Label({
    style: {
      backgroundColor: color,
      padding: '8px',
      margin: '0 0 4px 0'
    }
  });

  var description = ui.Label({
    value: name,
    style: {margin: '0 0 4px 6px'}
  });

  return ui.Panel({
    widgets: [colorBox, description],
    layout: ui.Panel.Layout.Flow('horizontal')
  });
};

var clusterColors = ['red', 'orange', 'yellow', 'green', 'darkgreen'];
var clusterNames = ['Very Low Vegetation (Rank 1)', 'Low Vegetation (Rank 2)', 'Moderate Vegetation (Rank 3)', 'High Vegetation (Rank 4)', 'Very High Vegetation (Rank 5)'];

legend.add(legendTitle);
for (var i = 0; i < clusterColors.length; i++) {
  legend.add(makeRow(clusterColors[i], clusterNames[i]));
}

Map.add(legend);

// Print the clustered images to the console for verification
print('Ranked Clustered NDVI East Coast:', rankedClustersEastCoast);
print('Ranked Clustered NDVI Central US:', rankedClustersCentralUS);
print('Ranked Clustered NDVI Texas:', rankedClustersTexas);
print('Ranked Clustered NDVI Midwest:', rankedClustersMidwest);
print('Ranked Clustered NDVI Southwest US:', rankedClustersSouthwestUS);
print('Ranked Clustered NDVI Pacific Northwest:', rankedClustersPacificNorthwest);
print('Ranked Clustered NDVI California:', rankedClustersCalifornia);
print('Ranked Clustered NDVI Montana:', rankedClustersMontana);
print('Ranked Clustered NDVI Wyoming:', rankedClustersWyoming);
print('Ranked Clustered NDVI Florida:', rankedClustersFlorida);
print('Ranked Clustered NDVI Alabama:', rankedClustersAlabama);
print('Ranked Clustered NDVI Louisiana:', rankedClustersLouisiana);
print('Ranked Clustered NDVI Mississippi:', rankedClustersMississippi);
