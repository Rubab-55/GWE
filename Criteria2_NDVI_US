// Define the geometries for the regions
var southwestUS = ee.Geometry.Rectangle([-125, 31, -102, 37]);
var pacificNorthwest = ee.Geometry.Rectangle([-125, 42, -116, 49]);
var california = ee.Geometry.Rectangle([-125, 32, -114, 42]);
var wyoming = ee.Geometry.Rectangle([-111, 40, -104, 45]);
var montana = ee.Geometry.Rectangle([-116, 44, -104, 49]);
var centralUS = ee.Geometry.Rectangle([-103, 36, -89, 49]);
var texas = ee.Geometry.Rectangle([-106, 25, -93, 37]);
var utah = ee.Geometry.Rectangle([-114, 37, -109, 42]);
var colorado = ee.Geometry.Rectangle([-109, 36, -102, 41]);
var midwest = ee.Geometry.Rectangle([-104, 36, -80, 49]);
var eastCoast = ee.Geometry.Rectangle([-82, 25, -66, 45]);
var florida = ee.Geometry.Rectangle([-87, 24, -79, 31]);
var atlanta = ee.Geometry.Rectangle([-85, 33, -83, 35]);
var mississippi = ee.Geometry.Rectangle([-91, 30, -88, 35]);
var alabama = ee.Geometry.Rectangle([-88, 30, -85, 35]);

// Define the date ranges for the dry and wet seasons
var dryStartDate = '2021-03-01';
var dryEndDate = '2021-05-31';
var wetStartDate = '2021-10-01';
var wetEndDate = '2021-12-31';
var yearStartDate = '2021-01-01';
var yearEndDate = '2021-12-31';

// Load the NLCD dataset
var nlcd = ee.Image('USGS/NLCD_RELEASES/2019_REL/NLCD/2019');
var urbanMask = nlcd.select('landcover').eq(21)
  .or(nlcd.select('landcover').eq(22))
  .or(nlcd.select('landcover').eq(23))
  .or(nlcd.select('landcover').eq(24));

// Cloud masking and scaling
function maskL8sr(image) {
  var qaMask = image.select('QA_PIXEL').bitwiseAnd(parseInt('11111', 2)).eq(0);
  var saturationMask = image.select('QA_RADSAT').eq(0);

  // Apply the scaling factors to the appropriate bands.
  var opticalBands = image.select('SR_B.').multiply(0.0000275).add(-0.2);
  var thermalBands = image.select('ST_B.*').multiply(0.00341802).add(149.0);

  // Replace the original bands with the scaled ones and apply the masks.
  return image.addBands(opticalBands, null, true)
      .addBands(thermalBands, null, true)
      .updateMask(qaMask)
      .updateMask(saturationMask)
      .updateMask(urbanMask.not()); // Exclude urban areas
}

// Function to compute NDVI
function computeNDVI(image) {
  var ndvi = image.normalizedDifference(['SR_B5', 'SR_B4']).rename('NDVI');
  return image.addBands(ndvi);
}

// Load the Landsat 8 Collection 2 Level 2 dataset and filter by date and cloud cover
var landsatCollection = ee.ImageCollection("LANDSAT/LC08/C02/T1_L2")
  .filterBounds(southwestUS.union(pacificNorthwest).union(california).union(wyoming).union(montana).union(centralUS).union(texas).union(utah).union(colorado).union(midwest).union(eastCoast).union(florida).union(atlanta).union(mississippi).union(alabama))
  .filterDate(yearStartDate, yearEndDate)
  .filter(ee.Filter.lt('CLOUD_COVER', 10))  // Relaxed cloud cover filter
  .map(maskL8sr)
  .map(computeNDVI);

// Calculate the mean and standard deviation NDVI for the dry season
var drySeasonCollection = landsatCollection.filterDate(dryStartDate, dryEndDate);
var meanNDVI = drySeasonCollection.select('NDVI').mean();
var stdDevNDVI = drySeasonCollection.select('NDVI').reduce(ee.Reducer.stdDev());

// Calculate the standard deviation NDVI for the wet season
var wetSeasonCollection = landsatCollection.filterDate(wetStartDate, wetEndDate);
var stdDevNDVIWet = wetSeasonCollection.select('NDVI').reduce(ee.Reducer.stdDev());

// Calculate the standard deviation NDVI for all scenes in 2021
var stdDevNDVIYear = landsatCollection.select('NDVI').reduce(ee.Reducer.stdDev());

// Load HUC-6 boundaries and filter for the regions
var huc6 = ee.FeatureCollection("USGS/WBD/2017/HUC06")
  .filterBounds(southwestUS.union(pacificNorthwest).union(california).union(wyoming).union(montana).union(centralUS).union(texas).union(utah).union(colorado).union(midwest).union(eastCoast).union(florida).union(atlanta).union(mississippi).union(alabama))
  .map(function(feature) {
    return feature.simplify(1000); // Adjust tolerance as needed
  });

// Ensure the NDVI images cover the entire HUC-6 boundaries
var meanNDVIClipped = meanNDVI.clipToCollection(huc6);
var stdDevNDVIClipped = stdDevNDVI.clipToCollection(huc6);
var stdDevNDVIWetClipped = stdDevNDVIWet.clipToCollection(huc6);
var stdDevNDVIYearClipped = stdDevNDVIYear.clipToCollection(huc6);

// Define visualization parameters for NDVI
var ndviParams = {min: -1, max: 1, palette: ['#000080', '#0000FF', '#00FFFF', '#00FF00', '#FFFF00', '#FF0000', '#800000']};
var stdDevParams = {min: 0, max: 0.5, palette: ['#000080', '#0000FF', '#00FFFF', '#00FF00', '#FFFF00', '#FF0000', '#800000']};

// Add the NDVI layers to the map, ensuring they fully cover the HUC-6 areas
Map.centerObject(southwestUS, 6);
Map.addLayer(meanNDVIClipped, ndviParams, 'Mean NDVI 2021 Dry Season');
Map.addLayer(stdDevNDVIClipped, stdDevParams, 'NDVI Standard Deviation 2021 Dry Season');
Map.addLayer(stdDevNDVIWetClipped, stdDevParams, 'NDVI Standard Deviation 2021 Wet Season');
Map.addLayer(stdDevNDVIYearClipped, stdDevParams, 'NDVI Standard Deviation 2021 Year');

// Define visualization parameters for HUC-6 boundaries
var huc6VisParams = {
  color: 'black',
  width: 1,
  fillColor: '00000000'
};

// Add HUC-6 boundaries to the map
Map.addLayer(huc6.style(huc6VisParams), {}, 'HUC-6 Boundaries');

// Add the NLCD land cover layer
var nlcdVisParams = {
  min: 0,
  max: 95,
  palette: [
    '466b9f', 'd1defa', 'decaca', 'd99482', 'ee0000', 'ab0000', 'b3ac9f', '68ab5f', '1c6330', 'b5ca8f',
    '6e9d58', '476818', 'bad9eb', '70a3ba', 'dcd93d', 'ab7028', 'a3a3a3', 'bebebe', 'd8d8d8', 'f5f5f5'
  ],
  opacity: 0.5
};
Map.addLayer(nlcd.select('landcover'), nlcdVisParams, 'NLCD Land Cover');

// Function to count the number of distinct dates in a collection
function countDistinctDates(collection) {
  var distinctDates = collection.distinct('system:time_start');
  var dateList = distinctDates.aggregate_array('system:time_start');
  return dateList.size();
}

// Count the number of days processed for each period
var drySeasonDays = countDistinctDates(drySeasonCollection);
var wetSeasonDays = countDistinctDates(wetSeasonCollection);
var yearDays = countDistinctDates(landsatCollection);

// Print the number of days processed for each period
print('Number of days processed (Dry Season):', drySeasonDays);
print('Number of days processed (Wet Season):', wetSeasonDays);
print('Number of days processed (Year):', yearDays);

// Create legends for NDVI
var createColorBar = function(palette, min, max, title) {
  var colorBar = ui.Panel({
    widgets: [
      ui.Label(min),
      ui.Thumbnail({
        image: ee.Image.pixelLonLat().select(0).multiply(0).add(ee.Image.pixelLonLat().select(0)),
        params: {
          bbox: [0, 0, 1, 0.1],
          dimensions: '100x10',
          format: 'png',
          min: 0,
          max: 1,
          palette: palette,
        },
        style: {stretch: 'horizontal', margin: '0 8px'},
      }),
      ui.Label(max.toString())
    ],
    layout: ui.Panel.Layout.flow('horizontal')
  });
  
  var legendTitle = ui.Label({
    value: title,
    style: {fontWeight: 'bold', fontSize: '12px', margin: '4px 8px'}
  });

  var legendPanel = ui.Panel({
    widgets: [legendTitle, colorBar],
    style: {position: 'bottom-right', padding: '8px 15px'}
  });
  
  return legendPanel;
};

// Create and add legends for NDVI
var ndviLegendPanel = createColorBar(ndviParams.palette, ndviParams.min, ndviParams.max, 'Mean NDVI Colorbar');
Map.add(ndviLegendPanel);

// Create and add legends for NDVI Standard Deviation (Dry Season)
var stdDevLegendPanel = createColorBar(stdDevParams.palette, stdDevParams.min, stdDevParams.max, 'NDVI Std Dev (Dry Season) Colorbar');
Map.add(stdDevLegendPanel);

// Create and add legends for NDVI Standard Deviation (Wet Season)
var stdDevWetLegendPanel = createColorBar(stdDevParams.palette, stdDevParams.min, stdDevParams.max, 'NDVI Std Dev (Wet Season) Colorbar');
Map.add(stdDevWetLegendPanel);

// Create and add legends for NDVI Standard Deviation (Year)
var stdDevYearLegendPanel = createColorBar(stdDevParams.palette, stdDevParams.min, stdDevParams.max, 'NDVI Std Dev (Year) Colorbar');
Map.add(stdDevYearLegendPanel);

// NLCD Legend
var nlcdLegend = ui.Panel({
  style: {
    position: 'top-left',
    padding: '8px 15px'
  }
});
var nlcdLegendTitle = ui.Label({
  value: 'NLCD Land Cover',
  style: {fontWeight: 'bold', fontSize: '12px', margin: '4px 8px'}
});
nlcdLegend.add(nlcdLegendTitle);
var nlcdPalette = [
  {color: '466b9f', name: 'Open Water'},
  {color: 'd1defa', name: 'Perennial Ice/Snow'},
  {color: 'decaca', name: 'Developed, Open Space'},
  {color: 'd99482', name: 'Developed, Low Intensity'},
  {color: 'ee0000', name: 'Developed, Medium Intensity'},
  {color: 'ab0000', name: 'Developed, High Intensity'},
  {color: 'b3ac9f', name: 'Barren Land (Rock/Sand/Clay)'},
  {color: '68ab5f', name: 'Deciduous Forest'},
  {color: '1c6330', name: 'Evergreen Forest'},
  {color: 'b5ca8f', name: 'Mixed Forest'},
  {color: '6e9d58', name: 'Shrub/Scrub'},
  {color: '476818', name: 'Herbaceous'},
  {color: 'bad9eb', name: 'Hay/Pasture'},
  {color: '70a3ba', name: 'Cultivated Crops'},
  {color: 'dcd93d', name: 'Woody Wetlands'},
  {color: 'ab7028', name: 'Emergent Herbaceous Wetlands'},
  {color: 'a3a3a3', name: 'Unconsolidated Shore'},
  {color: 'bebebe', name: 'Disturbed'},
  {color: 'd8d8d8', name: 'Forest/Shrub/Scrub - Post-Fire Regeneration'},
  {color: 'f5f5f5', name: 'Non-Vegetated - High Latitude Aquatic Bed'}
];
nlcdPalette.forEach(function(item) {
  nlcdLegend.add(ui.Panel({
    widgets: [
      ui.Label({
        style: {
          backgroundColor: item.color,
          padding: '8px',
          margin: '0 0 4px 0'
        }
      }),
      ui.Label({
        value: item.name,
        style: {margin: '0 0 4px 6px'}
      })
    ],
    layout: ui.Panel.Layout.Flow('horizontal')
  }));
});
Map.add(nlcdLegend);

// Print the results to the console for verification
print('Mean NDVI (Dry Season):', meanNDVIClipped);
print('NDVI Std Dev (Dry Season):', stdDevNDVIClipped);
print('NDVI Std Dev (Wet Season):', stdDevNDVIWetClipped);
print('NDVI Std Dev (Year):', stdDevNDVIYearClipped);
