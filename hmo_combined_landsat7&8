var midwest = ee.Geometry.Rectangle([-104, 36, -80, 49]);
var huc6 = ee.FeatureCollection("USGS/WBD/2017/HUC06");
var huc6Midwest = huc6.filterBounds(midwest);
var huc6Midwest = huc6Midwest.map(function(feature) {
  return feature.simplify(1000);  // Adjust tolerance as needed
});

//Map.centerObject(huc6Midwest, 4);
var startDate='2021-06-01';
var endDate='2021-08-31';
// Load and filter the Landsat 8 collection.
var landsat8=ee.ImageCollection('LANDSAT/LC08/C02/T1_L2')
   .filterBounds(huc6Midwest)
   .filterDate(startDate, endDate)
   .filter(ee.Filter.lt('CLOUD_COVER',5));
   
function applyScaleFactors(image){
   var opticalBands=image.select('SR_B.').multiply(0.0000275).add(-
       0.2);
   var thermalBands=image.select('ST_B.*').multiply(0.00341802)
       .add(149.0);
   return image.addBands(opticalBands, null, true)
       .addBands(thermalBands, null, true);
}

landsat8=landsat8.map(applyScaleFactors);

var composite=landsat8.median().clip(huc6Midwest);

var visParams={
   bands: ['SR_B4', 'SR_B3', 'SR_B2'],
   min: 0,
   max: 0.2
};
Map.addLayer(composite, visParams, 'L8 Composite');

function maskSrClouds(image){
   // Bit 0 - Fill
   // Bit 1 - Dilated Cloud
   // Bit 2 - Cirrus
   // Bit 3 - Cloud
   // Bit 4 - Cloud Shadow
   var qaMask=image.select('QA_PIXEL').bitwiseAnd(parseInt('11111',
       2)).eq(0);
   var saturationMask=image.select('QA_RADSAT').eq(0);

   return image.updateMask(qaMask)
       .updateMask(saturationMask);
}

// Apply the cloud mask to the collection.
var landsat8FiltMasked=landsat8.map(maskSrClouds);

// Create a composite.
var landsat8compositeMasked=landsat8FiltMasked.median().clip(huc6Midwest);
Map.addLayer(landsat8compositeMasked, visParams, 'L8 composite masked');

//LANDSAT7
var landsat7=ee.ImageCollection('LANDSAT/LE07/C02/T1_L2');
// Scaling factors for L7.
function applyScaleFactorsL7(image){
   var opticalBands=image.select('SR_B.').multiply(0.0000275).add(-
       0.2);
   var thermalBand=image.select('ST_B6').multiply(0.00341802).add(
       149.0);
   return image.addBands(opticalBands, null, true)
       .addBands(thermalBand, null, true);
}

// Filter collection, apply cloud mask, and scaling factors.
var landsat7FiltMasked=landsat7
   .filterBounds(huc6Midwest)
   .filterDate(startDate, endDate)
   .filter(ee.Filter.lessThan('CLOUD_COVER', 5))
   .map(maskSrClouds)
   .map(applyScaleFactorsL7);

// Create composite.
var landsat7compositeMasked=landsat7FiltMasked
   .median()
   .clip(huc6Midwest);

Map.addLayer(landsat7compositeMasked,
   {
       bands: ['SR_B3', 'SR_B2', 'SR_B1'],
       min: 0,
       max: 0.2
   },
   'L7 composite masked');
   
   //rename
function rename(image){
  return image.select(
       ['SR_B1', 'SR_B2', 'SR_B3', 'SR_B4', 'SR_B5', 'SR_B7'],
       ['SR_B2', 'SR_B3', 'SR_B4', 'SR_B5', 'SR_B6', 'SR_B7']);
}

// Apply the rename function.
var landsat7FiltMaskedRenamed=landsat7FiltMasked.map(rename);

var landsat78=landsat7FiltMaskedRenamed
   .merge(landsat8FiltMasked.select(
       ['SR_B2', 'SR_B3', 'SR_B4', 'SR_B5', 'SR_B6', 'SR_B7']))
   .map(function(img){
       return img.toFloat();
   });
print('Merged collections', landsat78);
var landsat78composite=landsat78.median().clip(huc6Midwest);
Map.addLayer(landsat78composite, visParams, 'L7 and L8 composite');
