// Simplified Geometry of the Southwest United States
var southwestUS = ee.Geometry.Rectangle([-125, 31, -102, 37]);

// Define the date ranges for the wet and dry seasons in 2021
var wetStartDate = '2021-07-01';
var wetEndDate = '2021-09-30';
var dryStartDate = '2021-03-01';
var dryEndDate = '2021-05-31';
var yearStartDate = '2021-01-01';
var yearEndDate = '2021-12-31';

// Load the SRTM Digital Elevation Data
var srtm = ee.Image('USGS/SRTMGL1_003');

// Define a land mask: elevation > 0
var landMask = srtm.gt(0);

// Cloud masking and scaling function
function maskL8sr(image) {
  image = image.updateMask(landMask).clip(southwestUS);
  var qaMask = image.select('QA_PIXEL').bitwiseAnd(parseInt('11111', 2)).eq(0);
  var saturationMask = image.select('QA_RADSAT').eq(0);

  var opticalBands = image.select('SR_B.').multiply(0.0000275).add(-0.2);
  var thermalBands = image.select('ST_B.*').multiply(0.00341802).add(149.0);

  return image.addBands(opticalBands, null, true)
      .addBands(thermalBands, null, true)
      .updateMask(qaMask)
      .updateMask(saturationMask);
}

// Function to compute NDVI
function ndvi(image) {
  var ndvi_image = image.normalizedDifference(['SR_B5', 'SR_B4']).rename('NDVI');
  return image.addBands(ndvi_image);
}

// Load the Landsat 8 Collection 2 Level 2 dataset for wet season and filter by date and cloud cover
var wetSeasonCollection = ee.ImageCollection('LANDSAT/LC08/C02/T1_L2')
  .filterBounds(southwestUS)
  .filterDate(wetStartDate, wetEndDate)
  .filter(ee.Filter.lt('CLOUD_COVER', 5))
  .map(maskL8sr)
  .map(ndvi)
  .median()
  .clip(southwestUS);

// Load the Landsat 8 Collection 2 Level 2 dataset for dry season and filter by date and cloud cover
var drySeasonCollection = ee.ImageCollection('LANDSAT/LC08/C02/T1_L2')
  .filterBounds(southwestUS)
  .filterDate(dryStartDate, dryEndDate)
  .filter(ee.Filter.lt('CLOUD_COVER', 5))
  .map(maskL8sr)
  .map(ndvi)
  .median()
  .clip(southwestUS);

// Subtract dry season NDVI from wet season NDVI
var ndviDifference = wetSeasonCollection.select('NDVI').subtract(drySeasonCollection.select('NDVI')).rename('NDVI_Difference');

// Load the Daymet dataset and filter by date and region
var daymet = ee.ImageCollection('NASA/ORNL/DAYMET_V4')
  .filterBounds(southwestUS);

// Calculate the average rainfall for the wet season
var wetSeasonRain = daymet.filterDate(wetStartDate, wetEndDate)
                          .select('prcp') // Total precipitation is used because Daymet does not have a separate 'rain' band
                          .mean()
                          .clip(southwestUS);

// Calculate the average rainfall for the dry season
var drySeasonRain = daymet.filterDate(dryStartDate, dryEndDate)
                          .select('prcp') // Total precipitation is used because Daymet does not have a separate 'rain' band
                          .mean()
                          .clip(southwestUS);

// Calculate the difference between wet and dry season rainfall
var rainDifference = wetSeasonRain.subtract(drySeasonRain).rename('Rain_Difference');

// Calculate mean and standard deviation of NDVI for the whole year
var annualNDVI = ee.ImageCollection('LANDSAT/LC08/C02/T1_L2')
  .filterBounds(southwestUS)
  .filterDate(yearStartDate, yearEndDate)
  .filter(ee.Filter.lt('CLOUD_COVER', 5))
  .map(maskL8sr)
  .map(ndvi);

var meanNDVI = annualNDVI.select('NDVI').mean().clip(southwestUS).rename('Mean_NDVI');
var stdDevNDVI = annualNDVI.select('NDVI').reduce(ee.Reducer.stdDev()).clip(southwestUS).rename('StdDev_NDVI');

// Calculate mean and standard deviation of rainfall for the whole year
var annualRain = daymet.filterDate(yearStartDate, yearEndDate).select('prcp');
var meanRain = annualRain.mean().clip(southwestUS).rename('Mean_Rain');
var stdDevRain = annualRain.reduce(ee.Reducer.stdDev()).clip(southwestUS).rename('StdDev_Rain');

// Load HUC-6 boundaries
var huc6 = ee.FeatureCollection("USGS/WBD/2017/HUC06")
  .filterBounds(southwestUS);

// Define visualization parameters for NDVI and NDVI difference using jet color scheme
var ndviParams = {
  min: -1,
  max: 1,
  palette: ['#000080', '#0000ff', '#00ffff', '#ffff00', '#ff0000', '#800000'] // jet color scheme
};

var differenceParams = {
  min: -1,
  max: 1,
  palette: ['#000080', '#0000ff', '#00ffff', '#ffff00', '#ff0000', '#800000'] // jet color scheme
};

var rainParams = {
  min: 0,
  max: 10,
  palette: ['#000080', '#0000ff', '#00ffff', '#ffff00', '#ff0000', '#800000']
};

var meanRainParams = {
  min: 0,
  max: 1000,
  palette: ['lightblue', 'blue', 'darkblue', 'purple']
};

// Function to create color bar
function createColorBar(palette, min, max, title) {
  var colorBar = ui.Thumbnail({
    image: ee.Image.pixelLonLat().select(0).multiply((max - min) / 100).add(min).visualize({
      min: min,
      max: max,
      palette: palette,
    }),
    params: {bbox: [0, 0, 1, 0.1], dimensions: '100x10'},
    style: {stretch: 'horizontal', margin: '0 8px'},
  });

  var labels = ui.Panel({
    widgets: [
      ui.Label(min, {margin: '4px 8px'}),
      ui.Label((min + max) / 2, {margin: '4px 8px', textAlign: 'center', stretch: 'horizontal'}),
      ui.Label(max, {margin: '4px 8px'}),
    ],
    layout: ui.Panel.Layout.flow('horizontal'),
  });

  var legendTitle = ui.Label({
    value: title,
    style: {fontWeight: 'bold', fontSize: '12px', margin: '4px 8px'}
  });

  var panel = ui.Panel({
    widgets: [legendTitle, colorBar, labels],
    style: {position: 'bottom-left', padding: '8px 15px'}
  });

  return panel;
}

// Create color bars for NDVI dry, wet, and difference images
var dryColorBar = createColorBar(ndviParams.palette, ndviParams.min, ndviParams.max, 'NDVI Dry Season 2021');
var wetColorBar = createColorBar(ndviParams.palette, ndviParams.min, ndviParams.max, 'NDVI Wet Season 2021');
var diffColorBar = createColorBar(differenceParams.palette, differenceParams.min, differenceParams.max, 'NDVI Difference (Wet - Dry) 2021');
var meanNDVIColorBar = createColorBar(ndviParams.palette, ndviParams.min, ndviParams.max, 'Mean NDVI 2021');
var stdDevNDVIColorBar = createColorBar(differenceParams.palette, 0, 1, 'StdDev NDVI 2021');
var meanRainColorBar = createColorBar(meanRainParams.palette, meanRainParams.min, meanRainParams.max, 'Mean Rainfall 2021');
var stdDevRainColorBar = createColorBar(rainParams.palette, 0, 10, 'StdDev Rainfall 2021');

// Add the NDVI layers for wet and dry seasons, mean NDVI, and their difference to the map
Map.centerObject(southwestUS, 6);
Map.addLayer(drySeasonCollection.select('NDVI'), ndviParams, 'NDVI Dry Season 2021 (March-May)');
Map.addLayer(wetSeasonCollection.select('NDVI'), ndviParams, 'NDVI Wet Season 2021 (July-September)');
Map.addLayer(ndviDifference, differenceParams, 'NDVI Difference (Wet - Dry) 2021');
Map.addLayer(meanNDVI, ndviParams, 'Mean NDVI 2021');
Map.addLayer(stdDevNDVI, differenceParams, 'StdDev NDVI 2021');
Map.addLayer(meanRain, meanRainParams, 'Mean Rainfall 2021');
Map.addLayer(stdDevRain, rainParams, 'StdDev Rainfall 2021');

// Add HUC-6 boundaries to the map
Map.addLayer(huc6.style({color: 'black', width: 1, fillColor: '00000000'}), {}, 'HUC-6 Boundaries');

// Add the color bars to the map
Map.add(dryColorBar);
Map.add(wetColorBar);
Map.add(diffColorBar);
Map.add(meanNDVIColorBar);
Map.add(stdDevNDVIColorBar);
Map.add(meanRainColorBar);
Map.add(stdDevRainColorBar);

// Print the NDVI images to the console
print('NDVI Dry Season:', drySeasonCollection.select('NDVI'));
print('NDVI Wet Season:', wetSeasonCollection.select('NDVI'));
print('NDVI Difference:', ndviDifference);
print('Mean NDVI 2021:', meanNDVI);
print('StdDev NDVI 2021:', stdDevNDVI);
print('Mean Rainfall 2021:', meanRain);
print('StdDev Rainfall 2021:', stdDevRain);
