// Load the GRIDMET Drought: CONUS Drought Indices dataset
var droughtData = ee.ImageCollection('GRIDMET/DROUGHT');

// Define the HUC-2 region for California (smaller region for optimization)
var westernHUC2 = ee.FeatureCollection("USGS/WBD/2017/HUC02")
  .filter(ee.Filter.eq('huc2', '18'))
  .map(function(feature) {
    return feature.simplify(1000);  // Simplify the geometry to reduce complexity
  });

// Load the SRTM Digital Elevation Data
var srtm = ee.Image('USGS/SRTMGL1_003');

// Define a land mask: elevation > 0
var landMask = srtm.gt(0);

// Function to compute NDVI
function computeNDVI(image) {
  var ndvi = image.normalizedDifference(['B8', 'B4']).rename('NDVI');
  return ndvi;
}

// Define the date range for the dry season in the region
var dryStartDate = '2021-06-01';
var dryEndDate = '2021-08-31';

// Load Sentinel-2 surface reflectance data for the dry season
var sentinel2Collection = ee.ImageCollection('COPERNICUS/S2_SR')
  .filterDate(dryStartDate, dryEndDate)
  .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 20))
  .map(computeNDVI);

// Compute the median NDVI for the dry season
var medianNDVI = sentinel2Collection.median().select('NDVI');

// Clip the NDVI image to the simplified HUC-2 boundaries
var clippedNDVIWestern = medianNDVI.clipToCollection(westernHUC2);

// Sample points for clustering (reduced number of points)
var training = clippedNDVIWestern.sample({
  region: westernHUC2.geometry(),
  scale: 100,  // Increased scale to reduce processing time
  numPixels: 1000,  // Reduced number of sample points
  geometries: true
});

// Apply k-means clustering with 5 clusters (from low to high NDVI)
var clusterer = ee.Clusterer.wekaKMeans(5).train(training);
var clustered = clippedNDVIWestern.cluster(clusterer);

// Define visualization parameters for clustering
var clusterVisParams = {
  min: 0,
  max: 4,
  palette: ['FF0000', 'FFA500', 'FFFF00', '00FF00', '008000']  // From low to high NDVI
};

// Add the clustered NDVI layer to the map
Map.addLayer(clustered.visualize(clusterVisParams), {}, 'Clustered NDVI Western HUC-2');

// Add the NDVI layer for the western HUC-2 region to the map
var ndviParams = {
  min: -1,
  max: 1,
  palette: ['#000080', '#0000FF', '#00FFFF', '#00FF00', '#FFFF00', '#FF0000', '#800000']
};
Map.addLayer(clippedNDVIWestern.visualize(ndviParams), {}, 'NDVI Western HUC-2');

// Center the map on the Western HUC-2 region
Map.centerObject(westernHUC2, 7);

// Add the HUC-2 boundaries to the map as a FeatureCollection
Map.addLayer(westernHUC2.style({color: '000000', width: 2, fillColor: '00000000'}), {}, 'Western HUC-2 Boundary');

// Create a legend for the clustering
var legend = ui.Panel({
  style: {
    position: 'bottom-right',
    padding: '8px 15px'
  }
});

var legendTitle = ui.Label({
  value: 'NDVI Clusters',
  style: {
    fontWeight: 'bold',
    fontSize: '14px',
    margin: '0 0 6px 0',
    padding: '0'
  }
});

legend.add(legendTitle);

// Colors and labels for the clusters
var clusterColors = ['#FF0000', '#FFA500', '#FFFF00', '#00FF00', '#008000'];
var clusterLabels = ['Very Low NDVI', 'Low NDVI', 'Moderate NDVI', 'High NDVI', 'Very High NDVI'];

// Add color boxes and labels to the legend
for (var i = 0; i < clusterColors.length; i++) {
  var colorBox = ui.Label({
    style: {
      backgroundColor: clusterColors[i],
      padding: '8px',
      margin: '0 0 4px 0'
    }
  });

  var description = ui.Label({
    value: clusterLabels[i],
    style: {margin: '0 0 4px 6px'}
  });

  legend.add(ui.Panel({
    widgets: [colorBox, description],
    layout: ui.Panel.Layout.Flow('horizontal')
  }));
}

// Add the legend to the map
Map.add(legend);

// Print the clustered image to the console for verification
print('Clustered NDVI Western HUC-2:', clustered);
